package TasksForMiddleCourse;
/* if (n > m) {
            while (n > 0 || m > 0) {
                if (n > 0) {
                    System.out.print("X");
                    n--;
                }
                if (m > 0) {
                    System.out.print("Y");
                    m--;
                }
            }
        } else {
            while (n > 0 || m > 0) {
                if (m > 0) {
                    System.out.print("Y");
                    m--;
                }
                if (n > 0) {
                    System.out.print("X");
                    n--;
                }
            }
        }
    }
}*/


/* задание
Условие
Ограничение времени
1 секунда
Ограничение памяти
256 МБ
Андрей и Слава оценивают смешные картинки в интернете. Андрей выбрал n

мемов про рэп, а Слава выбрал m мемов про каракалов. Друзья решили составить красивый коллаж, разложив все n+m картинок в ряд и пронумеровав от 1 до m+n слева направо.
 Чем больше в коллаже чередований мемов про каракалов и рэп, тем он смешнее: формально, назовем базовостью коллажа количество таких номеров i(1<= i < n+m)
  что i-й и(i+1)-е мемы имеют разные типы.

Помогите юным талантам, постройте для них по заданным n и m коллаж, имеющий максимальную базовость.



Формат входных данных

В единственной строке входных данных записаны два целых числа n и m (1<= n, m <= 100), разделенные пробелом.



Формат выходных данных

Выведите строку из n+m символов, описывающую ваш максимально базированный коллаж: в

i-й позиции должна находиться буква X, если i-й мем про рэп, и буква Y, если он про каракалов. Если существует несколько подходящих вариантов, выведите любой.

Примеры данных
Пример 1
3 3
XYXYXY
Решение*/
import java.util.Scanner;

public class Test1 {
    public static final Scanner scanner;

    static {
        scanner = new Scanner(System.in);
    }

    public static void main(String[] args) {
        int n = scanner.nextInt(); //реп Х
        int m = scanner.nextInt();//каракалы Y


        if (n > m) {
            for (int i = 0; i < m; i++) {
                System.out.print("X");
                n--;
                System.out.print("Y");
            }
            for (int i = 0; i < n; i++) {
                System.out.print("X");
            }
        } else {

            for (int i = 0; i < n; i++) {
                System.out.print("Y");
                m--;
                System.out.print("X");
            }
            for (int i = 0; i < m; i++) {
                System.out.print("Y");

            }
        }


    }
}
